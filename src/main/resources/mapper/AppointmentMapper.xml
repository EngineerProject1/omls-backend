<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cuit9622.olms.mapper.AppointmentMapper">

    <resultMap id="BaseResultMap" type="com.cuit9622.olms.vo.AppointVo">
        <result property="labId" column="lab_id" jdbcType="INTEGER"/>
        <result property="cur" column="cur" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="capacity" column="capacity" jdbcType="BIGINT"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,start_time,end_time
    </sql>
    <insert id="addAppointmentForIndividual">
        insert
        into
            sys_appointment
        (
            user_id,
            lab_id,
            experiment_name,
            purpose,
            book_time,
            time_slot_id,
            `type`,
            major_id,
            class_number,
            `time`,
            create_time,
            update_time,
            status
        )
        select
            #{data.userId},
            #{data.labId},
            #{data.experimentName},
            #{data.purpose},
            DATE_ADD(CURRENT_DATE(), interval #{data.offsetDay} day),
            #{data.timeSlotId},
            '0',
            #{data.majorId},
            #{data.classNumber},
            concat((select start_time from sys_time_slot where sys_time_slot.id=#{data.timeSlotId}),' ~ ',(select end_time from sys_time_slot where sys_time_slot.id=#{data.timeSlotId})),
            now(),
            now(),
            '1'
        where
            exists (
            select
            *
            from
            sys_lab_schedule
            where
            sys_lab_schedule.lab_id = #{data.labId}
          and sys_lab_schedule.weekday =(DAYOFWEEK(DATE_ADD(CURRENT_DATE(), interval #{data.offsetDay} day))))
          and not exists (
            select
            *
            from
            sys_appointment
            where
            book_time = DATE_ADD(CURRENT_DATE(), interval #{data.offsetDay} day)
            and time_slot_id = #{data.timeSlotId}
            and (`type` = '1' or user_id = #{data.userId} )
            and lab_id = #{data.labId})
          and exists(select * from sys_lab where id=#{data.labId} and status="0")
    </insert>
    <insert id="addAppointmentForClass">
        insert
        into
            sys_appointment
        (
            user_id,
            lab_id,
            experiment_name,
            purpose,
            book_time,
            time_slot_id,
            `type`,
            major_id,
            class_number,
            `time`,
            create_time,
            update_time,
            status
        )
        select
            #{data.userId},
            #{data.labId},
            #{data.experimentName},
            #{data.purpose},
            DATE_ADD(CURRENT_DATE(), interval #{data.offsetDay} day),
            #{data.timeSlotId},
            '1',
            #{data.majorId},
            #{data.classNumber},
            concat((select start_time from sys_time_slot where sys_time_slot.id=#{data.timeSlotId}),' ~ ',(select end_time from sys_time_slot where sys_time_slot.id=#{data.timeSlotId})),
            now(),
            now(),
            '0'
            where
            exists (
            select
            *
            from
            sys_lab_schedule
            where
            sys_lab_schedule.lab_id = #{data.labId}
            and sys_lab_schedule.weekday =(DAYOFWEEK(DATE_ADD(CURRENT_DATE(), interval #{data.offsetDay} day))))
            and not exists (
                select
                *
                from
                sys_appointment
                where
                book_time = DATE_ADD(CURRENT_DATE(), interval #{data.offsetDay} day)
                and time_slot_id = #{data.timeSlotId}
                and (`type` = '1' or user_id = #{data.userId} )
                and lab_id = #{data.labId})
            and (select count(*) from sys_appointment
                where book_time = DATE_ADD(CURRENT_DATE(), interval #{data.offsetDay} day)
                and time_slot_id = #{data.timeSlotId}
                and lab_id = #{data.labId})=0
            and exists(select * from sys_lab where id=#{data.labId} and status="0")
    </insert>
    <select id="getTargetTypeAppointment" resultType="com.cuit9622.olms.vo.AppointVo">
        select
            sys_lab.id lab_id,
            name,
            capacity,
            location,
            `type`,
            (
                select
                    count(*)
                from
                    sys_appointment
                where
                    sys_appointment.lab_id = sys_lab.id
                  and sys_appointment.time_slot_id = #{timeSlotId}
                  and sys_appointment.book_time = DATE_ADD(CURRENT_DATE(), interval #{offsetDay} day)) cur
        from
            sys_lab
        where
          `type` like concat('%',#{type}, '%')
          and status="0"
          and exists (
                select
                    *
                from
                    sys_lab_schedule
                where
                    sys_lab_schedule.lab_id = sys_lab.id
                  and sys_lab_schedule.weekday =(DAYOFWEEK(DATE_ADD(CURRENT_DATE(), interval #{offsetDay} day))))
          and not exists (
                select
                    *
                from
                    sys_appointment
                where
                    book_time = DATE_ADD(CURRENT_DATE(), interval #{offsetDay} day)
                  and time_slot_id = #{timeSlotId}
                  and (`type` = '1' or user_id=#{userId})
                  and lab_id = sys_lab.id)
    </select>
    <select id="selectAppointmentUser" resultType="com.cuit9622.olms.vo.AttendanceManagerVo">
        select  app.id,
                app.user_id,
                real_name,
                username,
                experiment_name,
                (select `status` from sys_attendance where sys_attendance.appointment_id = app.id and sys_attendance.user_id = sys_user.id) `status`
                from  sys_appointment app, sys_user
                    where app.user_id = sys_user.id
                    and app.lab_id = #{labId}
                    and app.time_slot_id = #{slotId}
                    and app.book_time = #{day}
        <if test="model.name != null and model.name !='' ">
            and sys_user.real_name like concat('%',#{model.name},'%')
        </if>
    </select>
</mapper>